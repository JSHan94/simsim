[{"/home/block/React/simsim/src/index.js":"1","/home/block/React/simsim/src/components/App.js":"2","/home/block/React/simsim/src/fbase.js":"3","/home/block/React/simsim/src/components/Router.js":"4","/home/block/React/simsim/src/components/Navigation.js":"5","/home/block/React/simsim/src/routes/Home.js":"6","/home/block/React/simsim/src/routes/Profile.js":"7","/home/block/React/simsim/src/routes/Auth.js":"8","/home/block/React/simsim/src/components/BoringButton.js":"9","/home/block/React/simsim/src/components/FriendState.js":"10","/home/block/React/simsim/src/components/AuthForm.js":"11","/home/block/React/simsim/src/components/FriendStates.js":"12"},{"size":269,"mtime":1611727430996,"results":"13","hashOfConfig":"14"},{"size":1041,"mtime":1612765955532,"results":"15","hashOfConfig":"14"},{"size":787,"mtime":1612929081974,"results":"16","hashOfConfig":"14"},{"size":1496,"mtime":1611896091817,"results":"17","hashOfConfig":"14"},{"size":1524,"mtime":1612965872774,"results":"18","hashOfConfig":"14"},{"size":1230,"mtime":1612964907870,"results":"19","hashOfConfig":"14"},{"size":1681,"mtime":1612934277991,"results":"20","hashOfConfig":"14"},{"size":1465,"mtime":1612964988360,"results":"21","hashOfConfig":"14"},{"size":1756,"mtime":1612933328007,"results":"22","hashOfConfig":"14"},{"size":588,"mtime":1612934037249,"results":"23","hashOfConfig":"14"},{"size":1901,"mtime":1612931088466,"results":"24","hashOfConfig":"14"},{"size":706,"mtime":1612965098707,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1ak8m1f",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/block/React/simsim/src/index.js",["57"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport firebase from \"firebase\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["58","59"],"/home/block/React/simsim/src/components/App.js",[],"/home/block/React/simsim/src/fbase.js",[],"/home/block/React/simsim/src/components/Router.js",["60"],"import React, {useState} from \"react\";\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\"\nimport Navigation from \"components/Navigation\";\n\n//{isLoggedIn && <Navigation/>}\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n    \n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn\n                ? (\n                    <div\n                        style={{\n                            maxWidth:890,\n                            width:\"100%\",\n                            margin:\"0 auto\",\n                            marginTop:80,\n                            display:\"flex\",\n                            justifyContent:\"center\",\n                        }}>\n                        <Route exact path = \"/\" render={()=><Home userObj ={userObj}/>}/>\n                        <Route exact path = \"/profile\" render = {()=><Profile userObj={userObj} refreshUser={refreshUser}/>}/>\n                        <Redirect from=\"*\" to=\"/\"/>\n                    </div>\n                ) : \n                (\n                    <>\n                        <Route exact path = \"/\" component={Auth}/>\n                        <Redirect from=\"*\" to=\"/\" />\n                    </>\n                )\n                }\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n\n","/home/block/React/simsim/src/components/Navigation.js",[],"/home/block/React/simsim/src/routes/Home.js",["61","62","63"],"/home/block/React/simsim/src/routes/Profile.js",["64"],"import { authService } from 'fbase';\nimport React, {useState } from 'react';\nimport {useHistory} from \"react-router-dom\"\n\n\n\nexport default ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const onLogOutClick = ()=>{\n        authService.signOut()\n        history.push(\"/\")\n        refreshUser()\n    }\n\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n\n    const onChange = (event) =>{\n        const {\n            target : {value},\n        }= event\n        setNewDisplayName(value)\n    }\n\n    const onSubmit = async(event) =>{\n        event.preventDefault()\n        if (userObj.displayName !== newDisplayName){\n            await userObj.updateProfile({\n                displayName : newDisplayName\n            })\n            refreshUser()\n        }\n    }\n    return(\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <span style={{marginBottom:10}}>이름</span>\n                <input \n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"이름을 입력하세요\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\" \n                    value=\"저장\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop:10\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                    로그아웃\n            </span>\n\n        </div>\n    )\n}","/home/block/React/simsim/src/routes/Auth.js",["65","66","67","68","69"],"/home/block/React/simsim/src/components/BoringButton.js",["70","71","72"],"import React, { Component, useState } from \"react\";\nimport { analyticService, dbService, storageService } from \"fbase\";\n\nconst BoringButton = ({userObj}) =>{\n  const checkedColor = \"#48A8C6 \"\n  const uncheckedColor = \"white\"\n  const [boringColor,setBoringColor] = useState(checkedColor)\n  const [notBoringColor, setNotBoringColor] = useState(uncheckedColor)\n\n  const addState = (feeling) =>{\n    try {\n      dbService\n        .collection(\"states\")\n        .doc(userObj.uid)\n        .get()\n        .then(doc=>{\n          if (!doc.data()){\n            /* No data*/\n            dbService\n              .collection(\"states\")\n              .doc(userObj.uid)\n              .set({\n                state : feeling,\n                createdAt: Date.now(),\n                name : userObj.displayName\n              })\n          }else{\n            /* Data Exist */\n            dbService.doc(`states/${userObj.uid}`).update({\n              state : feeling,\n              createdAt: Date.now(),\n              name : userObj.displayName\n            })\n          }\n        })\n    }catch(error){\n      console.log(error)\n    }\n  }\n  const onBoringClick =async (event)=>{\n    setBoringColor(checkedColor)\n    setNotBoringColor(uncheckedColor)\n    addState(\"Boring\")    \n  }\n  const onNotBoringClick =async(event)=>{\n    setBoringColor(uncheckedColor)\n    setNotBoringColor(checkedColor)\n    addState(\"NotBoring\")\n  }\n\n\n  return (\n    <div>\n      <button className=\"BoringBtn\" style={{color : notBoringColor, backgroundColor : boringColor}} onClick={onBoringClick}>심심해</button>\n      <button className=\"BoringBtn\" style={{color : boringColor, backgroundColor : notBoringColor}} onClick={onNotBoringClick}>괜찮아</button>\n    </div>\n  )\n}\n\nexport default BoringButton;","/home/block/React/simsim/src/components/FriendState.js",["73"],"import React, { useState } from \"react\";\n\n//심심함 카드 보여주는 코드\n\nconst FriendState =({feelingObj})=>{\n    const state = feelingObj.state\n    const name = feelingObj.name\n    var boring = false\n    if (state ===\"Boring\"){\n        boring = true\n    }\n    return(\n        <div>\n            {\n                boring ? (\n                <div className=\"state\">\n                 {name} 심심해요\n                </div>\n                ):(\n                <>\n                </>\n                )\n            }\n            \n        </div>\n    )\n}\n\nexport default FriendState;","/home/block/React/simsim/src/components/AuthForm.js",["74","75","76"],"import React, { useState } from \"react\";\nimport { authService,analyticService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }     \n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;","/home/block/React/simsim/src/components/FriendStates.js",["77"],{"ruleId":"78","severity":1,"message":"79","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":16},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"78","severity":1,"message":"86","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"87","line":2,"column":19,"nodeType":"80","messageId":"81","endLine":2,"endColumn":33},{"ruleId":"78","severity":1,"message":"88","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"89","line":10,"column":12,"nodeType":"80","messageId":"81","endLine":10,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":7,"column":1,"nodeType":"92","endLine":60,"endColumn":2},{"ruleId":"78","severity":1,"message":"93","line":4,"column":3,"nodeType":"80","messageId":"81","endLine":4,"endColumn":12},{"ruleId":"78","severity":1,"message":"94","line":6,"column":3,"nodeType":"80","messageId":"81","endLine":6,"endColumn":11},{"ruleId":"78","severity":1,"message":"95","line":9,"column":10,"nodeType":"80","messageId":"81","endLine":9,"endColumn":25},{"ruleId":"78","severity":1,"message":"96","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":16},{"ruleId":"78","severity":1,"message":"97","line":12,"column":8,"nodeType":"80","messageId":"81","endLine":12,"endColumn":20},{"ruleId":"78","severity":1,"message":"98","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"95","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":25},{"ruleId":"78","severity":1,"message":"87","line":2,"column":38,"nodeType":"80","messageId":"81","endLine":2,"endColumn":52},{"ruleId":"78","severity":1,"message":"86","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"95","line":2,"column":22,"nodeType":"80","messageId":"81","endLine":2,"endColumn":37},{"ruleId":"78","severity":1,"message":"99","line":4,"column":7,"nodeType":"80","messageId":"81","endLine":4,"endColumn":18},{"ruleId":"78","severity":1,"message":"100","line":31,"column":9,"nodeType":"80","messageId":"81","endLine":31,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":4,"column":23,"nodeType":"103","messageId":"104","endLine":4,"endColumn":25},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'useState' is defined but never used.","'storageService' is defined but never used.","'FriendState' is defined but never used.","'states' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'faTwitter' is defined but never used.","'faGithub' is defined but never used.","'analyticService' is defined but never used.","'AuthForm' is defined but never used.","'FriendStates' is defined but never used.","'Component' is defined but never used.","'inputStyles' is assigned a value but never used.","'data' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]