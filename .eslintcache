[{"/home/block/React/simsim/src/index.js":"1","/home/block/React/simsim/src/components/App.js":"2","/home/block/React/simsim/src/fbase.js":"3","/home/block/React/simsim/src/components/Router.js":"4","/home/block/React/simsim/src/components/Navigation.js":"5","/home/block/React/simsim/src/routes/Home.js":"6","/home/block/React/simsim/src/routes/Profile.js":"7","/home/block/React/simsim/src/routes/Auth.js":"8","/home/block/React/simsim/src/components/BoringButton.js":"9","/home/block/React/simsim/src/components/FriendState.js":"10","/home/block/React/simsim/src/components/AuthForm.js":"11","/home/block/React/simsim/src/components/FriendStates.js":"12","/home/block/React/simsim/src/components/HashTagForm.js":"13","/home/block/React/simsim/src/components/HashTag.js":"14"},{"size":236,"mtime":1613371346812,"results":"15","hashOfConfig":"16"},{"size":1041,"mtime":1612765955532,"results":"17","hashOfConfig":"16"},{"size":787,"mtime":1612929081974,"results":"18","hashOfConfig":"16"},{"size":1523,"mtime":1613375127506,"results":"19","hashOfConfig":"16"},{"size":1524,"mtime":1612965872774,"results":"20","hashOfConfig":"16"},{"size":528,"mtime":1613375343540,"results":"21","hashOfConfig":"16"},{"size":1678,"mtime":1613379776306,"results":"22","hashOfConfig":"16"},{"size":1328,"mtime":1613371346812,"results":"23","hashOfConfig":"16"},{"size":1806,"mtime":1613371346812,"results":"24","hashOfConfig":"16"},{"size":931,"mtime":1613380200517,"results":"25","hashOfConfig":"16"},{"size":1830,"mtime":1613371346812,"results":"26","hashOfConfig":"16"},{"size":855,"mtime":1613375525949,"results":"27","hashOfConfig":"16"},{"size":1553,"mtime":1613380245406,"results":"28","hashOfConfig":"16"},{"size":148,"mtime":1613380304899,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ak8m1f",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/block/React/simsim/src/index.js",[],["63","64"],"/home/block/React/simsim/src/components/App.js",[],"/home/block/React/simsim/src/fbase.js",[],"/home/block/React/simsim/src/components/Router.js",[],"/home/block/React/simsim/src/components/Navigation.js",[],"/home/block/React/simsim/src/routes/Home.js",["65","66","67"],"/home/block/React/simsim/src/routes/Profile.js",["68"],"/home/block/React/simsim/src/routes/Auth.js",["69","70","71","72","73"],"import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGoogle,\n  faFacebook,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance} from \"fbase\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"facebook\") {\n      provider = new firebaseInstance.auth.FacebookAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faCheckCircle}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      {/* <AuthForm /> */}\n      심심 레이더\n      <div>\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Google 계정으로 시작 <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"facebook\" className=\"authBtn\">\n          Facebook 계정으로 시작 <FontAwesomeIcon icon={faFacebook} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;","/home/block/React/simsim/src/components/BoringButton.js",["74","75","76"],"import React, { Component, useState } from \"react\";\nimport { analyticService, dbService, storageService } from \"fbase\";\n\nconst BoringButton = ({userObj}) =>{\n  const checkedColor = \"#48A8C6 \"\n  const uncheckedColor = \"white\"\n  const [boringColor,setBoringColor] = useState(checkedColor)\n  const [notBoringColor, setNotBoringColor] = useState(uncheckedColor)\n\n  const addState = (feeling) =>{\n    try {\n      dbService\n        .collection(\"states\")\n        .doc(userObj.uid)\n        .get()\n        .then(doc=>{\n          if (!doc.data()){\n            /* No data*/\n            dbService\n              .collection(\"states\")\n              .doc(userObj.uid)\n              .set({\n                state : feeling,\n                createdAt: Date.now(),\n                name : userObj.displayName\n              })\n          }else{\n            /* Data Exist */\n            dbService.doc(`states/${userObj.uid}`).update({\n              state : feeling,\n              createdAt: Date.now(),\n              name : userObj.displayName\n            })\n          }\n        })\n    }catch(error){\n      console.log(error)\n    }\n  }\n  const onBoringClick =async (event)=>{\n    setBoringColor(checkedColor)\n    setNotBoringColor(uncheckedColor)\n    addState(\"Boring\")    \n  }\n  const onNotBoringClick =async(event)=>{\n    setBoringColor(uncheckedColor)\n    setNotBoringColor(checkedColor)\n    addState(\"NotBoring\")\n  }\n\n\n  return (\n    <div>\n      <button className=\"BoringBtn\" style={{color : notBoringColor, backgroundColor : boringColor}} onClick={onBoringClick}>심심해</button>\n      <button className=\"BoringBtn\" style={{color : boringColor, backgroundColor : notBoringColor}} onClick={onNotBoringClick}>괜찮아</button>\n    </div>\n  )\n}\n\nexport default BoringButton;","/home/block/React/simsim/src/components/FriendState.js",[],"/home/block/React/simsim/src/components/AuthForm.js",["77","78","79"],"import React, { useState } from \"react\";\nimport { authService,analyticService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }     \n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;",["80","81"],"/home/block/React/simsim/src/components/FriendStates.js",[],"/home/block/React/simsim/src/components/HashTagForm.js",[],"/home/block/React/simsim/src/components/HashTag.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":15,"nodeType":"88","messageId":"89","endLine":1,"endColumn":23},{"ruleId":"86","severity":1,"message":"90","line":1,"column":24,"nodeType":"88","messageId":"89","endLine":1,"endColumn":33},{"ruleId":"86","severity":1,"message":"91","line":2,"column":9,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":5,"column":1,"nodeType":"94","endLine":57,"endColumn":2},{"ruleId":"86","severity":1,"message":"95","line":4,"column":3,"nodeType":"88","messageId":"89","endLine":4,"endColumn":12},{"ruleId":"86","severity":1,"message":"96","line":6,"column":3,"nodeType":"88","messageId":"89","endLine":6,"endColumn":11},{"ruleId":"86","severity":1,"message":"97","line":9,"column":10,"nodeType":"88","messageId":"89","endLine":9,"endColumn":25},{"ruleId":"86","severity":1,"message":"98","line":10,"column":8,"nodeType":"88","messageId":"89","endLine":10,"endColumn":16},{"ruleId":"86","severity":1,"message":"99","line":12,"column":8,"nodeType":"88","messageId":"89","endLine":12,"endColumn":20},{"ruleId":"86","severity":1,"message":"100","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"97","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":25},{"ruleId":"86","severity":1,"message":"101","line":2,"column":38,"nodeType":"88","messageId":"89","endLine":2,"endColumn":52},{"ruleId":"86","severity":1,"message":"97","line":2,"column":22,"nodeType":"88","messageId":"89","endLine":2,"endColumn":37},{"ruleId":"86","severity":1,"message":"102","line":4,"column":7,"nodeType":"88","messageId":"89","endLine":4,"endColumn":18},{"ruleId":"86","severity":1,"message":"103","line":31,"column":9,"nodeType":"88","messageId":"89","endLine":31,"endColumn":13},{"ruleId":"82","replacedBy":"104"},{"ruleId":"84","replacedBy":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'dbService' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'faTwitter' is defined but never used.","'faGithub' is defined but never used.","'analyticService' is defined but never used.","'AuthForm' is defined but never used.","'FriendStates' is defined but never used.","'Component' is defined but never used.","'storageService' is defined but never used.","'inputStyles' is assigned a value but never used.","'data' is assigned a value but never used.",["106"],["107"],"no-global-assign","no-unsafe-negation"]